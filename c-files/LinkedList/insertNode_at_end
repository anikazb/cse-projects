

//linked list
#include<stdio.h>
#include<stdlib.h>

//node deffination
struct node
{
    int data;
    struct node *link;
};

//create node
struct node *create_Node(int data)
{
    struct node *new_node=malloc(sizeof(struct node));
new_node->data=data;
new_node->link=NULL;
return new_node;
}

//insert at end
void add_at_end(struct node **head,int data)
{
    struct node *new_node=create_Node(data);
    //if its the first one
    if(*head==NULL)//if list is null thn it becomes head
    {
        *head=new_node;
    }
    //if its not the first one
   else
   {
       struct node *temp=*head;
    while(temp->link!=NULL)
    {

        temp=temp->link;
    }
    temp->link=new_node;
}

}

//traverse and count and display print
void traverse_display(struct node *head)
{ int count=0;
    struct node *temp=head;
    while(temp!=NULL)
    {
        printf("%d\n",temp->data);
        temp=temp->link;
        count++;
    }
    
    printf("\ncount=%d\n",count);
}
 int main()
 {
     struct node *head=NULL;
     
     add_at_end(&head,45);
     
      add_at_end(&head,55);
      
      add_at_end(&head,65);
      traverse_display(head);
      
 }





