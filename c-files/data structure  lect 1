//data structure

//traverse but n=size
#include<stdio.h>
int main()
{
    int n;
    printf("Enter the number of the elements in array :");
    scanf("%d",&n);
    
    int arr[n],i;
    printf("The elements are :\n");
    for(i=0;i<n;i++)
    {
        scanf("%d",&arr[i]);
    }
    printf("The elements in array :\n");
     for(i=0;i<n;i++)
    {
        printf("arr[%d] = %d",i,arr[i]);
        printf("\n");
    }
    return 0;
}

//traverse but size>n(we will get some empty space)
#include<stdio.h>
int main()
{
    int  arr[10],n;//size declare first
    printf("Enter the number of the elements in array :");
    scanf("%d",&n);
    
    int i;
    printf("The elements are :\n");
    for(i=0;i<n;i++)
    {
        scanf("%d",&arr[i]);
    }
    printf("The elements in array :\n");
     for(i=0;i<n;i++)
    {
        printf("arr[%d] = %d",i,arr[i]);
        printf("\n");
    }
    return 0;
}


//insert value in array(right shifting)
//insert 17 in position 2=index 2(suppose)
/*
0 | 1 | 2 | 3 | 4| 5| 6 |7 |8 | 9
6 |4 |16 |23 |40 |  |   |  |  | 
*/
#include<stdio.h>
int main()
{
    int arr[10],n;
   printf("Enter the number of elements in array :") ;
   scanf("%d",&n);
   
   int i;
   printf("The elements are :\n");
   for(i=0;i<n;i++)
 {
    scanf("%d",&arr[i]);   
   }
   printf("Traversing ,\n");
   for(i=0;i<n;i++)
   {
       printf("arr[%d] = %d",i,arr[i]);
      printf("\n");  
   }
int num,pos;
printf("Enter the number to be inserted :");
scanf("%d",&num);
printf("Enter the position at which the num has to be added :");
scanf("%d",&pos);

//index=numbering-1
for(i=n-1;i>=pos;i--)
{
    arr[i+1]=arr[i];
}
arr[pos]=num;
n=n+1;

printf("Inserting,\n");
 for(i=0;i<n;i++)
   {
       printf("arr[%d] = %d",i,arr[i]);
      printf("\n");  
   }
 
 int pos1;

printf("Enter the position at which the num has to be deleted :");
scanf("%d",&pos1);

for(i=pos1;i<n-1;i++)
{
    arr[i] =arr[i+1];
}
n=n-1;
printf("Deleting,\n");
 for(i=0;i<n;i++)
   {
       printf("arr[%d] = %d",i,arr[i]);
      printf("\n");  
   }
   return 0;
}

/tmp/nClPLSqx4G.o
Enter the number of elements in array :6
The elements are :
7
13
9
67
90
3
Traversing ,
arr[0] = 7
arr[1] = 13
arr[2] = 9
arr[3] = 67
arr[4] = 90
arr[5] = 3
Enter the number to be inserted :5
Enter the position at which the num has to be added :5
Inserting,
arr[0] = 7
arr[1] = 13
arr[2] = 9
arr[3] = 67
arr[4] = 90
arr[5] = 5
arr[6] = 3
Enter the position at which the num has to be deleted :6
Deleting,
arr[0] = 7
arr[1] = 13
arr[2] = 9
arr[3] = 67
arr[4] = 90
arr[5] = 5


=== Code Execution Successful ===


//Marge

#include<stdio.h>
int main()
{
    int  arr[10],arr2[10],n,m;//size declare first
    
    printf("Enter the number of the elements in arr[10] :");
    scanf("%d",&n);
   printf("Enter the number of the elements in arr2[10] :");
    scanf("%d",&m);
    
    int i;
    printf("The arr[elements] are :\n");
    for(i=0;i<n;i++)
    {
        scanf("%d",&arr[i]);
    }
    printf("Elements of arr:\n");
     for(i=0;i<n;i++)
    {
        printf("arr[%d] = %d",i,arr[i]);
        printf("\n");
    }

    printf("The arr2[elements] are :\n");
    for(i=0;i<m;i++)
    {
        scanf("%d",&arr2[i]);
    }
    printf("Elements of arr2:\n");
     for(i=0;i<m;i++)
    {
        printf("arr[%d] = %d",i,arr2[i]);
        printf("\n");
    }

 
  int arr3[20],index=0;
  
  for(i=0;i<n;i++)
  {
      arr3[index]=arr[i];
      index++;
  }
   for(i=0;i<m;i++)
  {
      arr3[index]=arr2[i];
      index++;
  }
   int sum; 
  sum=n+m ;
  printf("Merged array is:\n");
  for(i=0;i<sum;i++)
  {
       printf("array[%d] = %d",i,arr3[i]);
        printf("\n");
  }
   
    return 0;
}


Enter the number of the elements in arr[10] :2
Enter the number of the elements in arr2[10] :2
The arr[elements] are :
6
1
Elements of arr:
arr[0] = 6
arr[1] = 1
The arr2[elements] are :
4
4
Elements of arr2:
arr[0] = 4
arr[1] = 4
Merged array is:
array[0] = 6
array[1] = 1
array[2] = 4
array[3] = 4


=== Code Execution Successful ===

//addition
#include<stdio.h>

int main() {
    int arr[10], arr2[10], arr3[10], n, m;

    // Input the size of the first array
    printf("Enter the number of elements in arr: ");
    scanf("%d", &n);

    // Input the size of the second array
    printf("Enter the number of elements in arr2: ");
    scanf("%d", &m);

    // Make sure both arrays have the same number of elements for element-wise addition
    if (n != m) {
        printf("Error: Both arrays must have the same number of elements for addition.\n");
        return 1;
/*return 1 indicates a failure or abnormal condition, signaling to the operating system or the calling process that something went wrong.

return 0 is used to indicate that the program executed successfully, and there were no errors.*/
    }

    // Input the elements of the first array
    printf("Enter the elements of arr:\n");
    for (int i = 0; i < n; i++) 
    {
        scanf("%d", &arr[i]);
    }

    // Input the elements of the second array
    printf("Enter the elements of arr2:\n");
    for (int i = 0; i < n; i++) {
        scanf("%d", &arr2[i]);
    }

    // Perform element-wise addition and store it in arr3
    for (int i = 0; i <m ; i++)//n=m
    {
        arr3[i] = arr[i] + arr2[i];
    }

    // Print the result of the element-wise addition (arr3)
    printf("Result of element-wise addition (arr3):\n");
    for (int i = 0; i < n; i++) 
    {
        printf("arr[%d] + arr2[%d] = %d\n", i, i, arr3[i]);
    }

    return 0;
}
Enter the number of elements in arr: 3
Enter the number of elements in arr2: 3
Enter the elements of arr:
1 2 3
Enter the elements of arr2:
4 5 6
Result of element-wise addition (arr3):
arr[0] + arr2[0] = 5
arr[1] + arr2[1] = 7
arr[2] + arr2[2] = 9



// C code to read and display a 3 x 3 matrix.
#include<stdio.h>
int main()
{
    int row,col;
    
    printf("Enter row:");
    scanf("%d",&row);
    printf("Enter column:");
    scanf("%d",&col);
    
     int a[row][col];
   printf("a[row][col] = a[%d][%d]\n",row,col) ;
     
     int i,j;
    
     for(i=0;i<row;i++)
     {
         for(j=0;j<col;j++)
         {
             printf("\t");
             scanf("%d",&a[i][j]);
             
         }
     }
     printf("Matrix:\n");
      for(i=0;i<row;i++)
     {
         printf("\n");
         for(j=0;j<col;j++)
         {
             printf("\t%d",a[i][j]);
         }
     }
     
     return 0;
}

/tmp/U24USSmRWq.o
Enter row:3
Enter column:3
a[row][col] = a[3][3]
	3
	3
	4
	1
	3
	4
	5
	7
	9
Matrix:

	3	3	4
	1	3	4
	5	7	9

=== Code Execution Successful ===

// C code to read and display a 3 x 3 matrix additon.
#include<stdio.h>
int main()
{
    int row1,col1,row2,col2;
    
    printf("Enter row and column for arr1:");
    scanf("%d%d",&row1,&col1);
    printf("Enter row and column for arr2:");
    scanf("%d%d",&row2,&col2);
    
     int a[row1][col1],b[row2][col2];
   printf("a[row][col] = a[%d][%d]\n",row1,col1) ;
     printf("b[row][col] = b[%d][%d]\n",row2,col2) ;
     
     int i,j;
    
     for(i=0;i<row1;i++)
     {
         for(j=0;j<col1;j++)
         {
             printf("\t");
             scanf("%d",&a[i][j]);
             
         }
     }
     
     for(i=0;i<row2;i++)
     {
         for(j=0;j<col2;j++)
         {
             printf("\t");
             scanf("%d",&b[i][j]);
             
         }
     }
     printf("Matrix a:\n");
      for(i=0;i<row1;i++)
     {
         printf("\n");
         for(j=0;j<col1;j++)
         {
             printf("\t%d",a[i][j]);
         }
     }
     printf("\nMatrix b:\n");
      for(i=0;i<row2;i++)
     {
         printf("\n");
         for(j=0;j<col2;j++)
         {
             printf("\t%d",b[i][j]);
         }
     }
     
     // Check if matrices have the same dimensions for summation
     if(row1!=row2 || col1!=col2)
     {
         printf("ERROR!!!");
         return 1;
     }
     
      printf("\nSummation of a[%d][%d] and b[%d][%d]\n",row1,col1,row2,col2);
      
     int sum[row1][col1]; //row1=row2 col1=col2
     
     for(i=0;i<row1;i++)
     {
         for(j=0;j<col1;j++)
         {
     sum[i][j] = a[i][j] + b[i][j];
         }
     }
      for(i=0;i<row1;i++)
     {
         printf("\n");
         for(j=0;j<col1;j++)
         {
             printf("\t%d",sum[i][j]);
         }
     }
     return 0;
}
/tmp/GTclxW9AtU.o
Enter row and column for arr1:3
2
Enter row and column for arr2:3
2
a[row][col] = a[3][2]
b[row][col] = b[3][2]
	2
	3
	12
	3
	4
	5
	14
	2
	8
	9
	6
	5
Matrix a:

	2	3
	12	3
	4	5
Matrix b:

	14	2
	8	9
	6	5
Summation of a[3][2] and b[3][2]

	16	5
	20	12
	10	10

=== Code Execution Successful ===




//transpose
#include<stdio.h>
int main()
{
    int i,j,a[3][3],transpose_a[3][3];
    

    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    printf("Matrix\n");
    for(i=0;i<3;i++)
    {
        printf("\n");
        for(j=0;j<3;j++)
        {
            printf("\t%d",a[i][j]);
        }
    }
    
    
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            transpose_a[i][j]=a[j][i];
        }
    }
     printf("\nTranspose Matrix\n");
    for(i=0;i<3;i++)
    {
        printf("\n");
        for(j=0;j<3;j++)
        {
          printf("\t%d",transpose_a[i][j]);
        }
    }
    return 0;
}


/tmp/anvk6N492F.o
3
2
3
4
5
6
7
8
1
Matrix

	3	2	3
	4	5	6
	7	8	1
Transpose Matrix

	3	4	7
	2	5	8
	3	6	1

=== Code Execution Successful ===