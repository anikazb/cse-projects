//Use a structure to store different information about Cars.
                                //using string

#include<stdio.h>
#include<string.h>
struct car
{   char brand[20];
     char model[10] ;
       int number ;
};
int main()
{  struct car car1;
strcpy(car1.brand,"tonta");
  strcpy(car1.model,"A7");
   car1.number=90976;
   struct car car2;
   strcpy(car2.brand,"Fonta");
  strcpy(car2.model,"R7");
   car2.number=9876;
 printf("%s %s %d\n",car1.brand,car1.model,car1.number) ;
 
 printf("Brand=%s\n",car2.brand);
  printf("Model=%s\n",car2.model);
  printf("Num=%d\n",car2.number);
  return 0;
}
 
 
 
 //output
tonta A7 90976
Brand=Fonta
Model=R7
Num=9876


=== Code Execution Successful ===
............................................................................................................................................................................
                              //not using string



#include <stdio.h>

struct Car {
  char brand[50];
  char model[50];
  int year;
};

int main() {
  struct Car car1  = {"BMW", "X5", 1999};
  struct Car car2  = {"Ford", "Mustang", 1969};
  struct Car car3  = {"Toyota", "Corolla", 2011};

  printf("B=%s\n M=%s\n N=%d\n", car1.brand, car1.model, car1.year);
  printf("%s %s %d\n", car2.brand, car2.model, car2.year);
  printf("%s %s %d\n", car3.brand, car3.model, car3.year);

  return 0;
}
//output
B=BMW
 M=X5
 N=1999
Ford Mustang 1969
Toyota Corolla 2011


=== Code Execution Successful ===

